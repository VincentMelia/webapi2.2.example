//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.4.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using webapi22.example.data_access.sql.HelperClasses;
using webapi22.example.data_access.sql.RelationClasses;
using webapi22.example.data_access.sql.DaoClasses;

using webapi22.example.data_access.sql.EntityClasses;
using webapi22.example.data_access.sql.CollectionClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace webapi22.example.data_access.sql.FactoryClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>general base class for the generated factories</summary>
	[Serializable]
	public partial class EntityFactoryBase : EntityFactoryCore
	{
		private readonly webapi22.example.data_access.sql.EntityType _typeOfEntity;
		private readonly bool _isInHierarchy;

		/// <summary>CTor</summary>
		/// <param name="entityName">Name of the entity.</param>
		/// <param name="typeOfEntity">The type of entity.</param>
		public EntityFactoryBase(string entityName, webapi22.example.data_access.sql.EntityType typeOfEntity, bool isInHierarchy) : base(entityName)
		{
			_typeOfEntity = typeOfEntity;
			_isInHierarchy = isInHierarchy;
		}

		/// <inheritdoc/>
		public override IEntity CreateEntityFromEntityTypeValue(int entityTypeValue) { return GeneralEntityFactory.Create((webapi22.example.data_access.sql.EntityType)entityTypeValue); }
		
		/// <inheritdoc/>
		public override IEntityFields CreateFields() { return EntityFieldsFactory.CreateEntityFieldsObject(_typeOfEntity); }

		/// <inheritdoc/>
		public override IRelationCollection CreateHierarchyRelations(string objectAlias) { return ModelInfoProviderSingleton.GetInstance().GetHierarchyRelations(ForEntityName, objectAlias); }

		/// <inheritdoc/>
		public override IEntityFactory GetEntityFactory(object[] fieldValues, Dictionary<string, int> entityFieldStartIndexesPerEntity)
		{
			return (IEntityFactory)ModelInfoProviderSingleton.GetInstance().GetEntityFactory(ForEntityName, fieldValues, entityFieldStartIndexesPerEntity) ?? this;
		}
						
		/// <inheritdoc/>
		public override IEntityCollection CreateEntityCollection() { return GeneralEntityCollectionFactory.Create(_typeOfEntity); }

		/// <inheritdoc/>
		public override IEntityFields CreateHierarchyFields() 
		{
			return _isInHierarchy ? new EntityFields(ModelInfoProviderSingleton.GetInstance().GetHierarchyFields(this.ForEntityName), ModelInfoProviderSingleton.GetInstance(), null) : base.CreateHierarchyFields();
		}
	}
	
	/// <summary>Factory to create new, empty TodoListEntity objects.</summary>
	[Serializable]
	public partial class TodoListEntityFactory : EntityFactoryBase 
	{
		/// <summary>CTor</summary>
		public TodoListEntityFactory() : base("TodoListEntity", webapi22.example.data_access.sql.EntityType.TodoListEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity CreateImpl() { return new TodoListEntity(); }
	}
	
	/// <summary>Factory to create new, empty TodoListItemEntity objects.</summary>
	[Serializable]
	public partial class TodoListItemEntityFactory : EntityFactoryBase 
	{
		/// <summary>CTor</summary>
		public TodoListItemEntityFactory() : base("TodoListItemEntity", webapi22.example.data_access.sql.EntityType.TodoListItemEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity CreateImpl() { return new TodoListItemEntity(); }
	}
	
	/// <summary>Factory to create new, empty UserEntity objects.</summary>
	[Serializable]
	public partial class UserEntityFactory : EntityFactoryBase 
	{
		/// <summary>CTor</summary>
		public UserEntityFactory() : base("UserEntity", webapi22.example.data_access.sql.EntityType.UserEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity CreateImpl() { return new UserEntity(); }
	}

	/// <summary>Factory to create new entity collection objects</summary>
	[Serializable]
	public partial class GeneralEntityCollectionFactory
	{
		/// <summary>Creates a new entity collection</summary>
		/// <param name="typeToUse">The entity type to create the collection for.</param>
		/// <returns>A new entity collection object.</returns>
		public static IEntityCollection Create(webapi22.example.data_access.sql.EntityType typeToUse)
		{
			switch(typeToUse)
			{
				case webapi22.example.data_access.sql.EntityType.TodoListEntity:
					return new TodoListCollection();
				case webapi22.example.data_access.sql.EntityType.TodoListItemEntity:
					return new TodoListItemCollection();
				case webapi22.example.data_access.sql.EntityType.UserEntity:
					return new UserCollection();
				default:
					return null;
			}
		}		
	}
	
	/// <summary>Factory to create new, empty Entity objects based on the entity type specified. Uses entity specific factory objects</summary>
	[Serializable]
	public partial class GeneralEntityFactory
	{
		/// <summary>Creates a new, empty Entity object of the type specified</summary>
		/// <param name="entityTypeToCreate">The entity type to create.</param>
		/// <returns>A new, empty Entity object.</returns>
		public static IEntity Create(webapi22.example.data_access.sql.EntityType entityTypeToCreate)
		{
			var factoryToUse = EntityFactoryFactory.GetFactory(entityTypeToCreate);
			IEntity toReturn = null;
			if(factoryToUse != null)
			{
				toReturn = factoryToUse.Create();
			}
			return toReturn;
		}		
	}
	
	/// <summary>Class which is used to obtain the entity factory based on the .NET type of the entity. </summary>
	[Serializable]
	public static class EntityFactoryFactory
	{
		private static readonly Dictionary<Type, IEntityFactory> _factoryPerType = new Dictionary<Type, IEntityFactory>();

		/// <summary>Initializes the <see cref="EntityFactoryFactory"/> class.</summary>
		static EntityFactoryFactory()
		{
			foreach(int entityTypeValue in Enum.GetValues(typeof(webapi22.example.data_access.sql.EntityType)))
			{
				var factory = GetFactory((webapi22.example.data_access.sql.EntityType)entityTypeValue);
				_factoryPerType.Add(factory.Create().GetType(), factory);
			}
		}

		/// <summary>Gets the factory of the entity with the .NET type specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory GetFactory(Type typeOfEntity) { return _factoryPerType.GetValue(typeOfEntity);	}

		/// <summary>Gets the factory of the entity with the webapi22.example.data_access.sql.EntityType specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory GetFactory(webapi22.example.data_access.sql.EntityType typeOfEntity)
		{
			switch(typeOfEntity)
			{
				case webapi22.example.data_access.sql.EntityType.TodoListEntity:
					return new TodoListEntityFactory();
				case webapi22.example.data_access.sql.EntityType.TodoListItemEntity:
					return new TodoListItemEntityFactory();
				case webapi22.example.data_access.sql.EntityType.UserEntity:
					return new UserEntityFactory();
				default:
					return null;
			}
		}
	}
	
	/// <summary>Element creator for creating project elements from somewhere else, like inside Linq providers.</summary>
	public class ElementCreator : ElementCreatorBase, IElementCreator
	{
		/// <summary>Gets the factory of the Entity type with the webapi22.example.data_access.sql.EntityType value passed in</summary>
		/// <param name="entityTypeValue">The entity type value.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory GetFactory(int entityTypeValue) { return (IEntityFactory)this.GetFactoryImpl(entityTypeValue); }

		/// <summary>Gets the factory of the Entity type with the .NET type passed in</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory GetFactory(Type typeOfEntity) { return (IEntityFactory)this.GetFactoryImpl(typeOfEntity); }

		/// <summary>Creates a new resultset fields object with the number of field slots reserved as specified</summary>
		/// <param name="numberOfFields">The number of fields.</param>
		/// <returns>ready to use resultsetfields object</returns>
		public IEntityFields CreateResultsetFields(int numberOfFields) { return new ResultsetFields(numberOfFields); }
		
		/// <summary>Gets an instance of the TypedListDAO class to execute dynamic lists and projections.</summary>
		/// <returns>ready to use typedlistDAO</returns>
		public IDao GetTypedListDao() { return new TypedListDAO(); }
		
		/// <inheritdoc/>
		public override IInheritanceInfoProvider ObtainInheritanceInfoProviderInstance()
		{
			return ModelInfoProviderSingleton.GetInstance();
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand) { return new DynamicRelation(leftOperand); }

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, string aliasLeftOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, aliasLeftOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (webapi22.example.data_access.sql.EntityType)Enum.Parse(typeof(webapi22.example.data_access.sql.EntityType), rightOperandEntityName, false), aliasRightOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(string leftOperandEntityName, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation((webapi22.example.data_access.sql.EntityType)Enum.Parse(typeof(webapi22.example.data_access.sql.EntityType), leftOperandEntityName, false), joinType, (webapi22.example.data_access.sql.EntityType)Enum.Parse(typeof(webapi22.example.data_access.sql.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (webapi22.example.data_access.sql.EntityType)Enum.Parse(typeof(webapi22.example.data_access.sql.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <inheritdoc/>
		protected override IEntityFactoryCore GetFactoryImpl(int entityTypeValue) {	return EntityFactoryFactory.GetFactory((webapi22.example.data_access.sql.EntityType)entityTypeValue); }
	
		/// <inheritdoc/>
		protected override IEntityFactoryCore GetFactoryImpl(Type typeOfEntity) { return EntityFactoryFactory.GetFactory(typeOfEntity);	}

	}
}
